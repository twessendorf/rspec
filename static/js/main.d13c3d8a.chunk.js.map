{"version":3,"sources":["App.style.ts","utils/useFetch.ts","utils/useRuleCoverage.ts","RulePage.tsx","SearchPage.style.ts","utils/routing.ts","SearchHit.tsx","SearchPage.tsx","utils/useSearch.ts","TopBar.style.ts","TopBar.tsx","App.tsx","index.tsx"],"names":["makeStyles","theme","root","textAlign","backgroundColor","appBarSpacer","mixins","toolbar","useFetch","url","parseJSON","options","React","useState","response","setResponse","error","setError","isLoading","setIsLoading","useEffect","a","fetch","res","content","json","text","fetchData","languageToSonarpedia","Map","Object","entries","useRuleCoverage","process","coveredRules","coveredRulesError","coveredRulesIsLoading","ruleCoverageForSonarpediaKeys","languageKeys","ruleKeys","mapper","Error","result","forEach","language","ruleKey","push","length","ruleCoverage","get","allLangsRuleCoverage","Array","from","values","flat","ruleStateInAnalyzer","console","lang","some","version","RULE_STATE","useStyles","ruleBar","borderBottom","ruleid","marginTop","spacing","marginBottom","ruleidLink","color","title","coverage","description","tabRoot","justifyContent","tabScroller","flexGrow","unimplemented","tab","display","width","height","marginRight","borderRadius","coveredTab","targetedTab","removedTab","languageToJiraProject","languageToGithubProject","RulePage","props","match","params","document","history","useHistory","metadataJSONString","classes","branch","metadataUrl","descHTML","descError","descIsLoading","metadataJSON","metadataError","metadataIsLoading","languagesTabs","prUrl","undefined","all_languages","sort","map","ruleState","allKeys","classNames","Tab","label","value","className","JSON","stringify","coverageMapper","key","range","editOnGithubUrl","dangerouslySetInnerHTML","__html","href","prLink","ruleNumber","substring","specificationPRsLink","Link","upperCaseLanguage","toUpperCase","jiraProject","githubProject","titleWihoutQuotes","replaceAll","implementationPRsLink","ticketsLink","ticketsAndImplementationPRsLinks","tabsValue","Container","Typography","variant","component","RouterLink","to","underline","Tabs","onChange","event","indicatorColor","textColor","centered","scrollButtons","scroller","maxWidth","Box","searchHitBox","searchBar","paddingBottom","searchResults","topRow","flexDirection","resultsCount","useLocationSearchState","name","defaultValue","paramToState","param","stateToParam","state","toString","setState","location","useLocation","setSearchParam","search","skipURI","URLSearchParams","set","pathname","replace","has","searchHit","coveredLanguageChip","darker","targetedLanguageChip","removedLanguageChip","targetedMarker","borderColor","coveredMarker","removedMarker","SearchHit","coveredLanguages","targetedLanguages","removedLanguages","data","languages","filter","all_keys","chip","id","style","textDecoration","Chip","clickable","titles","gutterBottom","coveredBlock","targetedBlock","removedBlock","Card","CardContent","SearchPage","query","setQuery","ruleType","setRuleType","allRuleTypes","split","ruleTags","setRuleTags","qualityProfiles","setQualityProfiles","ruleLang","setLanguage","parseInt","pageNumber","setPageNumber","setLocationSearch","searchParams","useLocationSearch","pageSize","indexDataUrl","storeDataUrl","indexData","indexDataError","indexDataIsLoading","storeData","storeDataError","storeDataIsLoading","index","setIndex","results","setResults","numberOfHits","setNumberOfHits","loading","setResultsAreLoading","log","lunr","load","hits","q","term","toLowerCase","fields","presence","REQUIRED","usePipeline","ruleTag","qualityProfile","amendQuery","token","exception","message","pageResults","slice","ref","useSearch","totalPages","Math","ceil","allRuleTags","allLangs","allQualityProfiles","aggregatesData","aggregatesDataError","aggregatesDataIsLoading","keys","tags","langs","resultsDisplay","upperCaseQuery","toLocaleUpperCase","resultsBoxes","indexedRule","box","paramSetters","types","handleUpdate","field","uriSearch","page","target","Grid","container","item","xs","TextField","placeholder","fullWidth","margin","InputLabelProps","shrink","helperText","select","MenuItem","SelectProps","multiple","renderValue","selected","join","Pagination","count","siblingCount","homeButton","TopBar","AppBar","position","Toolbar","IconButton","edge","aria-label","Button","App","CssBaseline","basename","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d13c3d8a.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  root: {\n    textAlign: 'left',\n    backgroundColor: 'white',\n  },\n  appBarSpacer: theme.mixins.toolbar,\n}));","import React from 'react';\n\nexport function useFetch<FetchedType>(\n    url: string,\n    parseJSON=true,\n    options?: Record<string, any>\n  ): [FetchedType|null, any, boolean] {\n  const [response, setResponse] = React.useState<FetchedType|null>(null);\n  const [error, setError] = React.useState(null);\n  const [isLoading, setIsLoading] = React.useState(true);\n\n  React.useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await fetch(url, options);\n        let content = null;\n        if (parseJSON) {\n          content = await res.json();\n        } else {\n          content = await res.text();\n        }\n        setResponse(content);\n        setIsLoading(false)\n      } catch (exception) {\n        setError(exception);\n      }\n    };\n    fetchData();\n  }, [url, options, parseJSON]);\n\n  return [ response, error, isLoading ];\n}","import { useFetch } from './useFetch';\n\ntype Version = string | { since: string, until: string };\ntype RuleCoverage = Record<string, Record<string, Version>>;\n\nconst languageToSonarpedia = new Map<string, string[]>(Object.entries({\n  'abap': ['ABAP'],\n  'apex': ['APEX'],\n  'cfamily': ['CPP', 'C', 'OBJC'],\n  'cobol': ['COBOL'],\n  'csharp': ['CSH'],\n  'vbnet': ['VBNET'],\n  'css': ['CSS'],\n  'flex': ['FLEX'],\n  'kotlin': ['KOTLIN'],\n  'scala': ['SCALA'],\n  'ruby': ['RUBY'],\n  'go': ['GO'],\n  'java': ['JAVA'],\n  'javascript': ['JAVASCRIPT', 'JS', 'TYPESCRIPT'],\n  'php': ['PHP'],\n  'pli': ['PLI'],\n  'plsql': ['PLSQL'],\n  'python': ['PY'],\n  'rpg': ['RPG'],\n  'secrets': ['SECRETS'],\n  'swift': ['SWIFT'],\n  'tsql': ['TSQL'],\n  'vb6': ['VB'],\n  'WEB': ['WEB'],\n  'xml': ['XML'],\n  'html': ['HTML'],\n  'cloudformation': ['CLOUDFORMATION'],\n  'terraform': ['TERRAFORM']\n}));\n\nexport function useRuleCoverage() {\n  const coveredRulesUrl = `${process.env.PUBLIC_URL}/covered_rules.json`;\n  const [coveredRules, coveredRulesError, coveredRulesIsLoading] = useFetch<RuleCoverage>(coveredRulesUrl);\n\n  function ruleCoverageForSonarpediaKeys(languageKeys: string[], ruleKeys: string[], mapper: any) {\n    if (coveredRulesError) {\n      return 'Failed Loading';\n    }\n    if (coveredRulesIsLoading) {\n      return 'Loading';\n    }\n    if (!coveredRules) {\n      throw new Error('coveredRules is empty');\n    }\n    const result: any[] = [];\n    languageKeys.forEach(language => {\n      ruleKeys.forEach(ruleKey => {\n        if (language in coveredRules && ruleKey in coveredRules[language]) {\n          result.push(mapper(language, coveredRules[language][ruleKey]))\n        }\n      });\n    });\n    if (result.length > 0) {\n      return result;\n    } else {\n      return 'Not Covered';\n    }\n  }\n\n  function ruleCoverage(language: string, ruleKeys: string[], mapper: any) {\n    const languageKeys = languageToSonarpedia.get(language);\n    if (!languageKeys) {\n      return 'Nonsupported language';\n    }\n    return ruleCoverageForSonarpediaKeys(languageKeys, ruleKeys, mapper);\n  }\n\n  function allLangsRuleCoverage(ruleKeys: string[], mapper: any) {\n    const allLanguageKeys = Array.from(languageToSonarpedia.values()).flat();\n    return ruleCoverageForSonarpediaKeys(allLanguageKeys, ruleKeys, mapper);\n  }\n\n  function ruleStateInAnalyzer(language: string, ruleKeys: string[]): 'covered' | 'targeted' | 'removed' {\n    const languageKeys = languageToSonarpedia.get(language);\n    if (!languageKeys || coveredRulesError || coveredRulesIsLoading) {\n      console.error(`Failed to retrieve coverage for following languages: ${languageKeys}`);\n      return 'targeted';\n    }\n    if (!coveredRules) {\n      throw new Error('coveredRules is empty');\n    }\n\n    const result: Version[] = [];\n    languageKeys.forEach(lang => \n      ruleKeys.forEach(ruleKey => {\n        if (lang in coveredRules && ruleKey in coveredRules[lang]) {\n          result.push(coveredRules[lang][ruleKey]);\n        }\n      })\n    );\n\n    if (result.length > 0) {\n      // if there is at least one entry with simple (string) type, rule is still part of analyzer\n      // otherwise (when all entries keep an analyzer versions range) the rule is removed\n      return result.some(version => typeof version === 'string')\n        ? 'covered'\n        : 'removed';\n    } else {\n      return 'targeted';\n    }\n  }\n\n  return {ruleCoverage, allLangsRuleCoverage, ruleStateInAnalyzer};\n}\n\nexport const RULE_STATE = {\n  'covered': {\n    // blue\n    'color': '#4c9bd6',\n    'darker': '#25699d'\n  },\n  'targeted': {\n    // orange\n    'color': '#FD7D20',\n    'darker': '#E26003'\n  },\n  'removed': {\n    // red\n    'color': '#C72B28',\n    'darker': '#8D1B19'\n  }\n}\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport { Link } from '@material-ui/core';\nimport Highlight from 'react-highlight';\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\nimport { RULE_STATE, useRuleCoverage } from './utils/useRuleCoverage';\nimport { useFetch } from './utils/useFetch';\nimport { RuleMetadata } from './types';\n\nimport './hljs-humanoid-light.css';\n\n\nconst useStyles = makeStyles((theme) => ({\n  ruleBar: {\n    borderBottom: '1px solid lightgrey',\n  },\n  ruleid: {\n    textAlign: 'center',\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n  },\n  ruleidLink: {\n    color: 'inherit',\n  },\n  title: {\n    textAlign: 'justify',\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4),\n  },\n  coverage: {\n    marginBottom: theme.spacing(3),\n  },\n  description: {\n    textAlign: 'justify',\n    // marginBottom: theme.spacing(3),\n  },\n\n  // style used to center the tabs when there too few of them to fill the container\n  tabRoot: {\n    justifyContent: \"center\"\n  },\n  tabScroller: {\n    flexGrow: 0\n  },\n  unimplemented: {\n    color: 'red'\n  },\n\n  tab: {\n    display: 'flex',\n\n    \"&::before\": {\n      content: '\"\"',\n      display: 'block',\n      width: theme.spacing(1),\n      height: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      borderRadius: theme.spacing(1),\n    },\n\n    '& > .MuiTab-wrapper': {\n      width: 'auto',\n    }\n  },\n  coveredTab: {\n    \"&::before\": {\n      backgroundColor: RULE_STATE['covered'].color,\n    }\n  },\n  targetedTab: {\n    \"&::before\": {\n      backgroundColor: RULE_STATE['targeted'].color,\n    }\n  },\n  removedTab: {\n    \"&::before\": {\n      backgroundColor: RULE_STATE['removed'].color,\n    }\n  },\n}));\n\nconst languageToJiraProject = new Map(Object.entries({\n  \"PYTHON\": \"SONARPY\",\n  \"ABAP\": \"SONARABAP\",\n  \"CFAMILY\": \"CPP\",\n  \"JAVA\": \"SONARJAVA\",\n  \"COBOL\": \"SONARCOBOL\",\n  \"FLEX\": \"SONARFLEX\",\n  \"HTML\": \"SONARHTML\",\n  \"PHP\": \"SONARPHP\",\n  \"PLI\": \"SONARPLI\",\n  \"PLSQL\": \"SONARPLSQL\",\n  \"RPG\": \"SONARRPG\",\n  \"APEX\": \"SONARSLANG\",\n  \"RUBY\": \"SONARSLANG\",\n  \"KOTLIN\": \"SONARKT\",\n  \"SCALA\": \"SONARSLANG\",\n  \"GO\": \"SONARSLANG\",\n  \"SECRETS\": \"SECRETS\",\n  \"SWIFT\": \"SONARSWIFT\",\n  \"TSQL\": \"SONARTSQL\",\n  \"VB6\": \"SONARVBSIX\",\n  \"XML\": \"SONARXML\",\n  \"CLOUDFORMATION\": \"SONARIAC\",\n  \"TERRAFORM\": \"SONARIAC\",\n}));\n\nconst languageToGithubProject = new Map(Object.entries({\n  \"ABAP\": \"sonar-abap\",\n  \"CSHARP\": \"sonar-dotnet\",\n  \"VBNET\": \"sonar-dotnet\",\n  \"JAVASCRIPT\": \"SonarJS\",\n  \"TYPESCRIPT\": \"SonarJS\",\n  \"SWIFT\": \"sonar-swift\",\n  \"KOTLIN\": \"sonar-kotlin\",\n  \"GO\": \"slang-enterprise\",\n  \"SCALA\": \"slang-enterprise\",\n  \"RUBY\": \"slang-enterprise\",\n  \"APEX\": \"slang-enterprise\",\n  \"HTML\": \"sonar-html\",\n  \"COBOL\": \"sonar-cobol\",\n  \"VB6\": \"sonar-vb\",\n  \"JAVA\": \"sonar-java\",\n  \"PLI\": \"sonar-pli\",\n  \"CFAMILY\": \"sonar-cpp\",\n  \"CSS\": \"sonar-css\",\n  \"FLEX\": \"sonar-flex\",\n  \"PHP\": \"sonar-php\",\n  \"PLSQL\": \"sonar-plsql\",\n  \"PYTHON\": \"sonar-python\",\n  \"RPG\": \"sonar-rpg\",\n  \"TSQL\": \"sonar-tsql\",\n  \"XML\": \"sonar-xml\",\n  \"CLOUDFORMATION\": \"sonar-iac\",\n  \"TERRAFORM\": \"sonar-iac\",\n  \"SECRETS\": \"sonar-secrets\",\n}));\n\nfunction ticketsAndImplementationPRsLinks(ruleNumber: string, title: string, language?: string) {\n  if (language) {\n    const upperCaseLanguage = language.toUpperCase();\n    const jiraProject = languageToJiraProject.get(upperCaseLanguage);\n    const githubProject = languageToGithubProject.get(upperCaseLanguage);\n    const titleWihoutQuotes = title.replaceAll('\"','');\n\n    const implementationPRsLink = (\n      <Link href={`https://github.com/SonarSource/${githubProject}/pulls?q=is%3Apr+\"S${ruleNumber}\"+OR+\"RSPEC-${ruleNumber}\"`}>\n        Implementation Pull Requests\n      </Link>\n    );\n\n    if (jiraProject !== undefined) {\n      const ticketsLink = (\n        <Link href={`https://jira.sonarsource.com/issues/?jql=project%20%3D%20${jiraProject}%20AND%20(text%20~%20%22S${ruleNumber}%22%20OR%20text%20~%20%22RSPEC-${ruleNumber}%22%20OR%20text%20~%20\"${titleWihoutQuotes}\")`}>\n          Implementation tickets on Jira\n        </Link>\n      );\n      return {ticketsLink, implementationPRsLink};\n    } else {\n      const ticketsLink = (\n        <Link href={`https://github.com/SonarSource/${githubProject}/issues?q=is%3Aissue+\"S${ruleNumber}\"+OR+\"RSPEC-${ruleNumber}\"`}>\n          Implementation issues on GitHub\n        </Link>\n      );\n      return {ticketsLink, implementationPRsLink};\n    }\n  } else {\n    const ticketsLink = (<div>Select a language to see the implementation tickets</div>);\n    const implementationPRsLink = (<div>Select a language to see the implementation pull requests</div>);\n    return {ticketsLink, implementationPRsLink};\n  }\n}\n\nexport function RulePage(props: any) {\n  const ruleid = props.match.params.ruleid;\n  // language can be absent\n  const language = props.match.params.language;\n  document.title = ruleid;\n\n  const history = useHistory();\n  function handleLanguageChange(event: any, lang: string) {\n    history.push(`/${ruleid}/${lang}`);\n  }\n\n  const classes = useStyles();\n  let branch = 'master'\n\n  let descUrl = process.env.PUBLIC_URL + '/rules/' + ruleid + \"/\" + (language ?? \"default\") + \"-description.html\";\n  let metadataUrl = process.env.PUBLIC_URL + '/rules/' + ruleid + \"/\" + (language ?? \"default\") + \"-metadata.json\";\n\n  let [descHTML, descError, descIsLoading] = useFetch<string>(descUrl, false);\n  let [metadataJSON, metadataError, metadataIsLoading] = useFetch<RuleMetadata>(metadataUrl);\n\n  const {ruleCoverage, allLangsRuleCoverage, ruleStateInAnalyzer} = useRuleCoverage();\n  let coverage: any = \"Loading...\";\n\n  let title = \"Loading...\"\n  let metadataJSONString;\n  let languagesTabs = null;\n  let prUrl: string | undefined = undefined;\n  if (metadataJSON && !metadataIsLoading && !metadataError) {\n    title = metadataJSON.title;\n    if ('prUrl' in metadataJSON) {\n      prUrl = metadataJSON.prUrl;\n    }\n    branch = metadataJSON.branch;\n    metadataJSON.all_languages.sort();\n    languagesTabs = metadataJSON.all_languages.map(lang => { \n      const ruleState = ruleStateInAnalyzer(lang, metadataJSON!.allKeys);\n      const classNames = classes.tab + ' ' + (classes as any)[ruleState + 'Tab'];\n      return <Tab label={lang} value={lang} className={classNames} />;\n    });\n    metadataJSONString = JSON.stringify(metadataJSON, null, 2);\n\n    const coverageMapper = (key: any, range: any) => {\n      if (typeof range === \"string\") {\n        return (\n          <li >{key}: {range}</li>\n        );\n      } else {\n        return (\n          <li>Not covered for {key} anymore. Was covered from {range['since']} to {range['until']}.</li>\n        );\n      }\n    };\n    if (language) {\n      coverage = ruleCoverage(language, metadataJSON.allKeys, coverageMapper);\n    } else {\n      coverage = allLangsRuleCoverage(metadataJSON.allKeys, coverageMapper);\n    }\n  }\n\n  if (coverage !== \"Not Covered\") {\n    prUrl = undefined;\n    branch = 'master'; \n  }\n\n  let editOnGithubUrl = 'https://github.com/SonarSource/rspec/blob/' +\n                        branch + '/rules/' + ruleid + (language ? '/' + language : '');\n\n  let description = <div>Loading...</div>;\n  if (descHTML !== null && !descIsLoading && !descError) {\n    description = <div>\n      <div dangerouslySetInnerHTML={{__html: descHTML}}/>\n      <hr />\n      <a href={editOnGithubUrl}>Edit on Github</a><br/>\n      <hr />\n      <Highlight className='json'>{metadataJSONString}</Highlight>\n    </div>;\n  }\n  let prLink = <></>;\n  if (prUrl) {\n      prLink = <div><span className={classes.unimplemented}>Not implemented (see <a href={prUrl}>PR</a>)</span></div>\n  }\n  const ruleNumber = ruleid.substring(1);\n\n  const specificationPRsLink = (\n    <Link href={`https://github.com/SonarSource/rspec/pulls?q=is%3Apr+\"S${ruleNumber}\"+OR+\"RSPEC-${ruleNumber}\"`}>\n      Specification Pull Requests\n    </Link>\n  );\n\n  const {ticketsLink, implementationPRsLink} = ticketsAndImplementationPRsLinks(ruleNumber, title, language);\n  const tabsValue = language ? {'value' : language} : {'value': false};\n\n  return (\n    <div>\n    <div className={classes.ruleBar}>\n      <Container>\n        <Typography variant=\"h2\" classes={{root: classes.ruleid}}>\n          <Link className={classes.ruleidLink} component={RouterLink} to={`/${ruleid}`} underline=\"none\">{ruleid}</Link>\n        </Typography>\n        <Typography variant=\"h4\" classes={{root: classes.ruleid}}>{prLink}</Typography>\n        <Tabs\n            {...tabsValue}\n            onChange={handleLanguageChange}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            centered\n            variant=\"scrollable\"\n            scrollButtons=\"auto\"\n            classes={{ root: classes.tabRoot, scroller: classes.tabScroller }}\n        >\n          {languagesTabs}\n        </Tabs>\n      </Container>\n    </div>\n\n    <Container maxWidth=\"md\">\n      <Typography variant=\"h3\" classes={{root: classes.title}}>{title}</Typography>\n      <Box className={classes.coverage}>\n        <Typography variant=\"h4\" >Covered Since</Typography>\n        <ul>\n        {coverage}\n        </ul>\n      </Box>\n\n      <Box className={classes.coverage}>\n        <Typography variant=\"h4\" >Related Tickets and Pull Requests</Typography>\n        <ul>\n          {specificationPRsLink}\n        </ul>\n        <ul>\n          {implementationPRsLink}\n        </ul>\n        <ul>\n          {ticketsLink}\n        </ul>\n      </Box>\n\n      <Box>\n        <Typography variant=\"h4\">Description</Typography>\n        <Typography className={classes.description}>\n          {description}\n        </Typography>\n      </Box>\n    </Container>\n    </div>\n\n  );\n}\n","\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  root: {\n    // marginTop: theme.spacing(1),\n  },\n  searchHitBox: {\n    marginBottom: theme.spacing(1),\n  },\n  searchBar: {\n    // backgroundColor: 'white'\n    borderBottom: '1px solid lightgrey',\n    paddingBottom: theme.spacing(2),\n  },\n  searchResults: {\n    marginTop: theme.spacing(3),\n  },\n  topRow: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  resultsCount: {\n    marginBottom: theme.spacing(2),\n  }\n}));\n","import React, { useState } from \"react\";\nimport { useLocation, useHistory } from \"react-router-dom\";\n\n\nexport function useLocationSearch() {\n  const location = useLocation();\n  const history = useHistory();\n\n  function setLocationSearch(searchParams: Record<string, string>, push=true) {\n    const search = new URLSearchParams(location.search);\n\n    for (const [key, value] of Object.entries(searchParams)) {\n      search.set(key, value);\n    }\n    \n    if (push) {\n      history.push(`${location.pathname}?${search.toString()}`);\n    } else {\n      history.replace(`${location.pathname}?${search.toString()}`);\n    }\n  }\n\n  return {searchParams: new URLSearchParams(location.search), setLocationSearch};\n}\n\ninterface Serializable {\n  toString: () => string\n}\n\nexport type SearchParamSetter<ValueType> = (value: ValueType, { push, skipURI }?: {\n  push?: boolean | undefined;\n  skipURI?: boolean | undefined;\n}) => void;\n\nexport function useLocationSearchState<ValueType extends Serializable = string>(\n    name: string,\n    defaultValue: ValueType,\n    // Default paramToState function works if ValueType is string.\n    paramToState=(param: any) => param !== undefined ? param: defaultValue,\n    stateToParam=(state: ValueType) => state !== undefined ? state.toString(): defaultValue.toString()\n  ): [ValueType, SearchParamSetter<ValueType>] {\n  const [state, setState] = useState<ValueType>(defaultValue);\n  const location = useLocation();\n  const history = useHistory();\n\n  React.useEffect(() => {\n    const search = new URLSearchParams(location.search);\n    if (search.has(name) && search.get(name) !== stateToParam(state)) {\n      setState(paramToState(search.get(name)));\n    } else if (!search.has(name) && stateToParam(state) !== stateToParam(defaultValue)) {\n      setState(paramToState(defaultValue));\n    }\n  }, [name, defaultValue, paramToState, stateToParam, state, location, history]);\n\n  function setSearchParam(value: ValueType, {push=true, skipURI=false} = {}) {\n    const search = new URLSearchParams(location.search);\n\n    search.set(name, stateToParam(value));\n    setState(value);\n    if (push) {\n      history.push(`${location.pathname}?${search.toString()}`);\n    } else {\n      history.replace(`${location.pathname}?${search.toString()}`);\n    }\n  }\n\n  return [state, setSearchParam];\n}","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Chip from '@material-ui/core/Chip';\n\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Link } from '@material-ui/core';\nimport { IndexedRule } from './types/IndexStore';\nimport { RULE_STATE, useRuleCoverage } from './utils/useRuleCoverage';\n\nconst useStyles = makeStyles((theme) => ({\n  searchHit: {\n\n  },\n  ruleid: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  language: {\n    marginRight: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  coveredLanguageChip: {\n    marginRight: theme.spacing(1),\n    marginTop: theme.spacing(2),\n    backgroundColor: RULE_STATE['covered'].color,\n    '&:hover, &:focus': {\n      backgroundColor: RULE_STATE['covered'].darker\n    },\n  },\n  targetedLanguageChip: {\n    marginRight: theme.spacing(1),\n    marginTop: theme.spacing(2),\n    backgroundColor: RULE_STATE['targeted'].color,\n    '&:hover, &:focus': {\n      backgroundColor: RULE_STATE['targeted'].darker\n    },\n  },\n  removedLanguageChip: {\n    marginRight: theme.spacing(1),\n    marginTop: theme.spacing(2),\n    backgroundColor: RULE_STATE['removed'].color,\n    '&:hover, &:focus': {\n      backgroundColor: RULE_STATE['removed'].darker\n    },\n  },\n  targetedMarker: {\n    marginTop: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    borderColor: RULE_STATE['targeted'].color,\n    color: RULE_STATE['targeted'].color\n  },\n  coveredMarker: {\n    marginTop: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    borderColor: RULE_STATE['covered'].color,\n    color: RULE_STATE['covered'].color\n  },\n  removedMarker: {\n    marginTop: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    borderColor: RULE_STATE['removed'].color,\n    color: RULE_STATE['removed'].color\n  }\n}));\n\ntype SearchHitProps = {\n  data: IndexedRule\n}\n\nexport function SearchHit(props: SearchHitProps) {\n  const { ruleStateInAnalyzer } = useRuleCoverage();\n  const classes = useStyles();\n\n  const coveredLanguages: JSX.Element[] = [];\n  const targetedLanguages: JSX.Element[] = [];\n  const removedLanguages: JSX.Element[] = [];\n\n  const actualLanguages = props.data.languages.filter(language => language !== 'default');\n  actualLanguages.forEach(lang => {\n    const ruleState = ruleStateInAnalyzer(lang, props.data.all_keys);\n    const chip = <Link component={RouterLink} to={`/${props.data.id}/${lang}`} style={{ textDecoration: 'none' }}>\n      <Chip\n        classes={{root: (classes as any)[ruleState + 'LanguageChip']}}\n        label={lang}\n        color=\"primary\"\n        clickable\n      />\n    </Link>;\n    if (ruleState === 'covered') {\n      coveredLanguages.push(chip);\n    } else if (ruleState === 'targeted') {\n      targetedLanguages.push(chip);\n    } else {\n      removedLanguages.push(chip);\n    }\n  });\n  const titles = props.data.titles.map(title => (\n    <Typography variant=\"body1\" component=\"p\" gutterBottom>\n      {title}\n    </Typography>\n  ));\n\n  const coveredBlock = coveredLanguages.length === 0 ? <></> \n    : <Typography variant=\"body2\" component=\"p\" classes={{root: classes.language}}>\n      <Chip classes={{root: classes.coveredMarker}} label=\"Covered\" color=\"primary\" variant=\"outlined\" />\n      {coveredLanguages}\n    </Typography>;\n\n  const targetedBlock = targetedLanguages.length === 0 ? <></> \n    :<Typography variant=\"body2\" component=\"p\" classes={{root: classes.language}}>\n      <Chip classes={{root: classes.targetedMarker}} label=\"Targeted\" color=\"secondary\" variant=\"outlined\" />\n      {targetedLanguages}\n    </Typography>;\n\n  const removedBlock = removedLanguages.length === 0 ? <></> \n    :<Typography variant=\"body2\" component=\"p\" classes={{root: classes.language}}>\n      <Chip classes={{root: classes.removedMarker}} label=\"Removed\" color=\"secondary\" variant=\"outlined\" />\n      {removedLanguages}\n    </Typography>;\n\n  return (\n    <Card variant=\"outlined\" classes={{root: classes.searchHit}}>\n      <CardContent>\n        <Typography classes={{root: classes.ruleid}} variant=\"h5\" component=\"h5\" gutterBottom>\n          <Link component={RouterLink} to={`/${props.data.id}`}>\n            <div> Rule {props.data.id} </div>\n          </Link>\n        </Typography>\n        {titles}\n        {coveredBlock}\n        {targetedBlock}\n        {removedBlock}\n      </CardContent>\n    </Card>\n  )\n}\n","import React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Pagination from '@material-ui/lab/Pagination';\nimport Box from '@material-ui/core/Box';\n\nimport useStyles from './SearchPage.style';\nimport { useSearch } from './utils/useSearch';\nimport { useFetch } from './utils/useFetch';\nimport {\n  SearchParamSetter,\n  useLocationSearch,\n  useLocationSearchState\n} from './utils/routing';\nimport { SearchHit } from './SearchHit';\nimport { IndexAggregates } from './types/IndexStore'\n\nexport const SearchPage = () => {\n  document.title = \"Search\"\n\n  const classes = useStyles();\n\n  const pageSize = 20;\n  const [query, setQuery] = useLocationSearchState('query', '');\n\n  const [ruleType, setRuleType] = useLocationSearchState('types', 'ANY');\n  const allRuleTypes: Record<string,string> = {\n    'BUG': 'Bug',\n    'CODE_SMELL': 'Code Smell',\n    'SECURITY_HOTSPOT': 'Security Hotspot',\n    'VULNERABILITY': 'Vulnerability'\n  };\n\n  const [ruleTags, setRuleTags] = useLocationSearchState<string[]>('tags', [], value => value ? value.split(',') : []);\n  const [qualityProfiles, setQualityProfiles] = useLocationSearchState<string[]>('qualityProfiles', [], value => value ? value.split(',') : []);\n  const [ruleLang, setLanguage] = useLocationSearchState('lang', 'ANY');\n\n  const [pageNumber, setPageNumber] = useLocationSearchState('page', 1, parseInt);\n  const {setLocationSearch} = useLocationSearch();\n\n\n  const {results, numberOfHits, error, loading} = useSearch(query,\n    ruleType === 'ANY' ? null : ruleType,\n    ruleLang === 'ANY' ? null : ruleLang,\n    ruleTags,\n    qualityProfiles,\n    pageSize, pageNumber);\n  const totalPages = numberOfHits ? Math.ceil(numberOfHits/pageSize) : 0;\n\n  let allRuleTags:string[] = [];\n  let allLangs:string[] = [];\n  let allQualityProfiles = ['Sonar way', 'Sonar way recommended'];\n  const aggregatesDataUrl = `${process.env.PUBLIC_URL}/rules/rule-index-aggregates.json`;\n  const [aggregatesData, aggregatesDataError, aggregatesDataIsLoading] = useFetch<IndexAggregates>(aggregatesDataUrl);\n\n  if (aggregatesData && !aggregatesDataIsLoading && !aggregatesDataError) {\n    allRuleTags = Object.keys(aggregatesData.tags).sort();\n    allLangs = Object.keys(aggregatesData.langs).sort();\n    allQualityProfiles = Object.keys(aggregatesData.qualityProfiles).sort();\n  }\n\n  let resultsDisplay: string|JSX.Element[] = \"No rule found...\";\n  if (loading) {\n    resultsDisplay = \"Searching\";\n  } else if (results.length > 0) {\n    const upperCaseQuery = query.toLocaleUpperCase();\n    let resultsBoxes: JSX.Element[] = [];\n\n    // making the exact match to appear first in the search results\n    results.forEach(indexedRule => {\n      const box = <Box className={classes.searchHitBox}>\n        <SearchHit key={indexedRule.id} data={indexedRule}/>\n      </Box>;\n      if(indexedRule.all_keys.some(key => key === upperCaseQuery)) {\n        resultsBoxes = [box, ...resultsBoxes];\n      } else {\n        resultsBoxes.push(box);\n      }\n    });\n    resultsDisplay = resultsBoxes;\n  }\n\n  const paramSetters: Record<string, SearchParamSetter<any>> = {\n    types: setRuleType,\n    tags: setRuleTags,\n    qualityProfiles: setQualityProfiles,\n    lang:setLanguage,\n    query: setQuery\n  };\n  function handleUpdate(field: string) {\n    return function(event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) {\n      if (pageNumber > 1) {\n        const uriSearch: Record<string, any> = {\n          query: query, types: ruleType, tags: ruleTags, qualityProfiles: qualityProfiles, lang: ruleLang, page: 1\n        };\n        uriSearch[field] = event.target.value;\n        setLocationSearch(uriSearch);\n      } else {\n        paramSetters[field](event.target.value, {push: false});\n      }\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n    <div className={classes.searchBar}>\n    <Container maxWidth=\"md\">\n    <Grid container spacing={3}>\n      <Grid item xs={12}>\n        <Typography variant=\"h4\">Search Rule Specifications</Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n            id=\"title-query\"\n            label=\"Rule Title and Description\"\n            placeholder=\"Search in rule titles and descriptions\"\n            fullWidth\n            margin=\"normal\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            variant=\"outlined\"\n            value={query}\n            onChange={handleUpdate('query')}\n            error={!!error}\n            helperText={error}\n        />\n      </Grid>\n      <Grid item xs={3}>\n        <TextField\n          select\n          fullWidth\n          margin=\"normal\"\n          variant=\"outlined\"\n          label=\"Rule type\"\n          value={ruleType}\n          onChange={handleUpdate('types')}\n        >\n          <MenuItem key=\"Any\" value=\"ANY\">\n            Any\n          </MenuItem>\n          {Object.keys(allRuleTypes).map((ruleType) => (\n            <MenuItem key={ruleType} value={ruleType}>\n              {allRuleTypes[ruleType]}\n            </MenuItem>\n          ))}\n        </TextField>\n      </Grid>\n      <Grid item xs={5}>\n      <TextField\n          select\n          fullWidth\n          SelectProps={{\n            multiple: true,\n            renderValue: (selected: any) => {\n              return selected.join(', ');\n            }\n          }}\n          margin=\"normal\"\n          variant=\"outlined\"\n          label=\"Rule Tags\"\n          value={ruleTags}\n          onChange={handleUpdate('tags')}\n        >\n          {allRuleTags.map((ruleTag) => (\n            <MenuItem key={ruleTag} value={ruleTag}>\n              {ruleTag}\n            </MenuItem>\n          ))}\n        </TextField>\n      </Grid>\n      <Grid item xs={4}>\n      <TextField\n          select\n          fullWidth\n          margin=\"normal\"\n          variant=\"outlined\"\n          label=\"Language\"\n          value={ruleLang}\n          onChange={handleUpdate('lang')}\n        >\n          <MenuItem key=\"Any\" value=\"ANY\">\n            Any\n          </MenuItem>\n          {allLangs.map((lang) => (\n            <MenuItem key={lang} value={lang}>\n              {lang}\n            </MenuItem>\n          ))}\n        </TextField>\n      </Grid>\n      <Grid item xs={12}>\n      <TextField\n          select\n          fullWidth\n          SelectProps={{\n            multiple: true,\n            renderValue: (selected: any) => {\n              return selected.join(', ');\n            }\n          }}\n          margin=\"normal\"\n          variant=\"outlined\"\n          label=\"Default Quality Profiles\"\n          value={qualityProfiles}\n          onChange={handleUpdate('qualityProfiles')}\n        >\n          {allQualityProfiles.map((qualityProfile) => (\n            <MenuItem key={qualityProfile} value={qualityProfile}>\n              {qualityProfile}\n            </MenuItem>\n          ))}\n        </TextField>\n      </Grid>\n    </Grid>\n    </Container>\n  </div>\n  <div className={classes.searchResults}>\n    <Container maxWidth=\"md\">\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Box className={classes.topRow}>\n            <Box className={classes.resultsCount}>\n              <Typography variant=\"subtitle1\">Number of rules found: {numberOfHits}</Typography>\n            </Box>\n          </Box>\n            {resultsDisplay}\n          <Pagination count={totalPages} page={pageNumber} siblingCount={2}\n            onChange={(event, value) => setPageNumber(value)}\n            />\n        </Grid>\n      </Grid>\n    </Container>\n  </div>\n  </div>\n  )\n}\n","import React, { useState } from 'react';\n\nimport * as lunr from 'lunr'\n\nimport { useFetch } from './useFetch';\nimport { IndexedRule, IndexStore } from '../types/IndexStore';\n\nexport function useSearch(query: string, ruleType: string|null, ruleLang: string|null, ruleTags: string[],\n                          qualityProfiles: string[],\n                          pageSize: number, pageNumber: number) {\n  let indexDataUrl = `${process.env.PUBLIC_URL}/rules/rule-index.json`;\n  let storeDataUrl = `${process.env.PUBLIC_URL}/rules/rule-index-store.json`;\n\n  const [indexData, indexDataError, indexDataIsLoading] = useFetch<object>(indexDataUrl);\n  const [storeData, storeDataError, storeDataIsLoading] = useFetch<IndexStore>(storeDataUrl);\n  const [index, setIndex] = useState<lunr.Index|null>(null);\n\n  const [results, setResults] = useState<IndexedRule[]>([]);\n  const [numberOfHits, setNumberOfHits] = useState<number|null>(null);\n  const [error, setError] = useState<string|null>(null);\n  const [loading, setResultsAreLoading] = useState(true);\n\n  React.useEffect(() => {\n    console.log(`trying to load index`);\n    if (indexData && !indexDataIsLoading && !indexDataError) {\n      console.log(\"Loading Index\");\n      setIndex(lunr.Index.load(indexData));\n    }\n  }, [indexData, indexDataError, indexDataIsLoading]);\n\n  React.useEffect(() => {\n    console.log(`trying to run query`);\n    if (index != null && !storeDataIsLoading && !storeDataError) {\n      let hits: lunr.Index.Result[] = []\n      setError(null);\n      try {\n        // We use index.query instead if index.search in order to fully\n        // control how each filter is added and how the query is processed.\n        hits = index.query(q => {\n          // Add rule type filter\n          if (ruleType) {\n            q.term(ruleType.toLowerCase(), {\n              fields: ['type'],\n              presence: lunr.Query.presence.REQUIRED,\n              usePipeline: false\n            });\n          }\n\n          if (ruleLang) {\n            q.term(ruleLang.toLowerCase(), {\n              fields: ['languages'],\n              presence: lunr.Query.presence.REQUIRED,\n              usePipeline: false\n            });\n          }\n\n          // Add rule tags filter\n          ruleTags.forEach(ruleTag => {\n            q.term(ruleTag, {\n              fields: ['tags'],\n              presence: lunr.Query.presence.REQUIRED,\n              usePipeline: false\n            });\n          });\n\n          // Add quality profiles filter\n          qualityProfiles.forEach(qualityProfile => {\n            q.term(qualityProfile.toLowerCase(), {\n              fields: ['qualityProfiles'],\n              presence: lunr.Query.presence.REQUIRED,\n              usePipeline: false\n            });\n          });\n\n          // Search for each query token in titles and descriptions\n          lunr.tokenizer(amendQuery(query)).forEach(token => {\n            q.term(token, {fields: ['all_keys', 'titles', 'descriptions'], presence: lunr.Query.presence.REQUIRED})\n          });\n        });\n      } catch (exception) {\n        if (exception instanceof lunr.QueryParseError) {\n          setError(exception.message);\n        } else {\n          throw exception;\n        }\n      }\n      if (storeData) {\n        setNumberOfHits(hits.length)\n        const pageResults = hits.slice(pageSize*(pageNumber - 1), pageSize*(pageNumber));\n        setResults(pageResults.map(({ ref }) => storeData[ref]));\n        setResultsAreLoading(false);\n      }\n    }\n  }, [query, ruleType, ruleLang, ruleTags, qualityProfiles, pageSize, pageNumber, storeData, storeDataIsLoading, storeDataError, index]);\n\n  return {results, numberOfHits, error, loading};\n}\n\n// allows to search by a rule key in the following formats: SXXX, RSPEC-XXX\nfunction amendQuery(query: string) {\n  return query.replace('RSPEC-', 'S');\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginBottom: '13px', // Quickfix. For some reason the topbar overlaps on the content.\n    backgroundColor: '#c72b28',\n  },\n  homeButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  unimplemented: {\n    color: '#FFFFFF',\n  },\n}));\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport HomeIcon from '@material-ui/icons/Home';\n\nimport useStyles from './TopBar.style';\n\nexport default function TopBar() {\n  const classes = useStyles();\n\n  return (\n      <AppBar position=\"static\" className={classes.root}>\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.homeButton} color=\"inherit\" aria-label=\"menu\" href=\"/rspec\">\n            <HomeIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            SonarSource Rule Specifications\n          </Typography>\n            <Button href=\"https://github.com/SonarSource/rspec/pulls?q=is%3Aopen+is%3Apr+%22Create+rule%22\">\n              <span className={classes.unimplemented} > Rules under specification </span>\n            </Button>\n        </Toolbar>\n      </AppBar>\n  );\n}","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { Box } from '@material-ui/core';\nimport useStyles from './App.style';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport {RulePage} from \"./RulePage\";\nimport {SearchPage} from \"./SearchPage\";\nimport TopBar from \"./TopBar\";\n\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <CssBaseline>\n    <div className={classes.root}>\n      <TopBar/>\n      <Box>\n        <Router basename=\"/rspec\">\n          <Switch>\n            <Route path=\"/:ruleid/:language?\" component={RulePage} />\n            <Route>\n              <SearchPage/>\n            </Route>\n          </Switch>\n        </Router>\n      </Box>\n    </div>\n    </CssBaseline>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}